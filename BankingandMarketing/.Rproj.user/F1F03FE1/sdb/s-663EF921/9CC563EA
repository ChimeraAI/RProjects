{
    "collab_server" : "",
    "contents" : "# Load Libraries\n\nlibrary(data.table)\nlibrary(caret)\nlibrary(xgboost)\nlibrary(caTools)\n\n#Read and separate raw data\nrawData <- read.csv(\"bank-full.csv\", sep = \";\", header = TRUE)\n\n#Convert to DataFrame\nsetDT(rawData)\n\n#Set seed\nset.seed(11)\n\n#Split rawData into training and testing data\ntempData <- sample.split(rawData$y, SplitRatio = 0.7)\ntrainData <- rawData[tempData]\ntestData <- rawData[!tempData]\n\ntr_target <- trainData$y\ntest_target <- testData$y\n\nnew_tr <- model.matrix(~.+0, data = trainData[,-c(\"y\")])\nnew_test <- model.matrix(~.+0, data = testData[,-c(\"y\")])\n\ntr_target <- as.numeric(tr_target) - 1\ntest_target <- as.numeric(test_target) - 1\n\ndTrain <- xgb.DMatrix(data = new_tr, label = tr_target)\ndTest <- xgb.DMatrix(data = new_test, label = test_target)\n\n\n#----------------------------------------------------------------------------------\n\n# Setting parameters for xgboost\nparams <- list(booster = \"gbtree\", objective = \"binary:logistic\", eta=0.07, gamma=5, max_depth=7, min_child_weight=1, subsample=1, colsample_bytree=1, alpha = 1)\n\nxgbcv <- xgb.cv( params = params, data = dTrain, \n                 nrounds = 100, nfold = 10, showsd = T, stratified = T, print.every.n = 10, early.stop.round = 20, maximize = F)\n\nxgb\n\n#first default - model training\nxgb1 <- xgb.train (params = params, data = dTrain, nrounds = 79, \n                   watchlist = list(val=dTest,train=dTrain), print.every.n = 10, early.stop.round = 10, maximize = F , eval_metric = \"error\")\n#model prediction\nxgbpred <- predict (xgb1,dTest)\nxgbpred <- ifelse (xgbpred > 0.5,1,0)\n\n#-----------------------------------------------------------------------------------\n\n#view variable importance plot\nmat <- xgb.importance (feature_names = colnames(new_tr),model = xgb1)\nxgb.plot.importance (importance_matrix = mat[1:20]) \n\n#confusion matrix\nconfusionMatrix (xgbpred, test_target)\n\n\n\n\n\n",
    "created" : 1504207384288.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "96831075",
    "id" : "9CC563EA",
    "lastKnownWriteTime" : 1504189998,
    "last_content_update" : 1504189998,
    "path" : "~/GitHub/RProjects/BankingandMarketing/TestCode.R",
    "project_path" : "TestCode.R",
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}