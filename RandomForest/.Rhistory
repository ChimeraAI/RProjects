dataFrame = read.csv("bank-full.csv", split = ";", header = "TRUE")
dataFrame = read.csv("bank-full.csv", split = ";", header = "TRUE")
help("read.csv")
dataFrame = read.csv("bank-full.csv", sep = ";", header = "TRUE")
dataFrame = read.csv("bank-full.csv", sep = ";", header = TRUE)
View(dataFrame)
View(dataFrame)
help(apply)
apply(DataFrame,2,function(x) length(unique(x)))
apply(dataFrame,2,function(x) length(unique(x)))
help(c
)
for(i in cols) {
dataFrame[,i] = as.factor(dataFrame[,i])
}
cols <- c("job","marital","education","default","housing","loan","contact","day","poutcome","y")
barplot(table(dataFrame$y))
barplot(table(dataFrame$day))
barplot(table(dataFrame$previous))
barplot(table(dataFrame$pdays))
barplot(table(dataFrame$pdays))
table(dataFrame$pdays)
barplot(able(dataFrame$campaign))
barplot(table(dataFrame$campaign))
barplot(table(dataFrame$duration))
barplot(table(dataFrame$day))
barplot(table(dataFrame$day))
source('~/PersonalProjects/RProject/RandomForest/Code.R')
barplot(table(dataFrame$contact))
barplot(table(dataFrame$contact))
source('~/PersonalProjects/RProject/RandomForest/Code.R')
barplot(table(dataFrame$contact))
apply(dataFrame,2,function(x) length(unique(x)))
barplot(table(dataFrame$month))
barplot(table(dataFrame$contact))
barplot(table(dataFrame$loan))
barplot(table(dataFrame$balance))
barplot(table(dataFrame$education))
help(~)
help("~")
getwd()
read.csv("bank-full.csv")
View(dataFrame)
View(dataFrame)
dataFrame %>% summary()
data("iris")
factor(dataFrame$poutcome)
unique(factor(dataFrame$poutcome))
import(magrittr)
library(magrittr)
install.packages("magrittr")
barplot(table(dataFrame$poutcome))
barplot(table(dataFrame$balance))
barplot(table(dataFrame$poutcome))
table(dataFrame$poutcome)(2)
help(apply)
testing <- data.frame(dataFrame$poutcome,dataFrame$y)
View(testing)
View(testing)
dataFrame[1,1]
testing[1,1]
help("read.csv")
rm(testing)
for(i in testing) {
print(i)
}
for(i in testing) {
print(i)
}
source('~/GitHub/RProjects/RandomForest/Code.R')
print(i[0])
source('~/GitHub/RProjects/RandomForest/Code.R')
dim(testing)
dim(testin[:,])
dim(testin[:][0])
dim(testing[:,])
dim(testing)(0)
dim(testing)[0]
dd <- dim(testing)
dd[0]
dd[1]
for(i in testing) {
print(i[2])
}
source('~/GitHub/RProjects/RandomForest/Code.R')
source('~/GitHub/RProjects/RandomForest/Code.R')
source('~/GitHub/RProjects/RandomForest/Code.R')
source('~/GitHub/RProjects/RandomForest/Code.R')
nrow(testing)
source('~/GitHub/RProjects/RandomForest/Code.R')
identical(1,1)
summary(dataFrame$contact)
help(rpart)
plot(mpg ~ cyl, data = mtcars)
help("plot")
plot(sin,-pi,2*pi)
mtcars
plot(mpg ~ cyl, data = mtcars)
plot(~.,data=mtcars)
help(~.)
?formula
plot(~.,data = iris)
plot(mpg ~., data = mtcars)
